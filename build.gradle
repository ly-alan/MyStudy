// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.4.0'

    ext {
        kotlin_version = '1.3.61'
    }
    repositories {

        google()
//        jcenter()
        mavenCentral()
        maven {
            url 'https://maven.aliyun.com/repository/google'
        }
        maven {
            url 'https://maven.aliyun.com/repository/gradle-plugin'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        classpath 'com.google.gms:google-services:4.3.4' // google-services plugin
        classpath 'org.aspectj:aspectjtools:1.9.4'
        classpath 'org.aspectj:aspectjweaver:1.9.4'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
//        jcenter()
    }
    //let project evaluate its script first
    project.afterEvaluate {
        //only apply to projects that have the android plugin
        if (project.plugins.hasPlugin('com.android.application')) {

            //add the android sdk manager plugin to andriod projects
//            apply plugin: 'android-sdk-manager'

            //global android settings

            project.android {
                packagingOptions {
                    exclude 'META-INF/beans.xml'
                    exclude 'META-INF/DEPENDENCIES'
                    exclude 'META-INF/LICENSE'
                    exclude 'META-INF/NOTICE'
                    exclude 'META-INF/LICENSE.txt'
                    exclude 'META-INF/NOTICE.txt'
                    exclude 'META-INF/DEPENDENCIES.txt'
                }

                applicationVariants.all { variant ->
                    //rename output files
                    //renameOutputFiles(project, variant)
                }

                dexOptions {
                    jumboMode = true
                    javaMaxHeapSize "2560M"
                }
            }

            //signconfig
            def propsFile = rootProject.file('keystore.properties')
            def props = new Properties()
            props.load(new FileInputStream(propsFile))
            def configNameDebug = 'debugConfig'
            def configNameRelase = 'releaseConfig'
            if (propsFile.exists() && android.signingConfigs.hasProperty(configNameDebug)) {
                android.signingConfigs[configNameDebug].storeFile = file(props['storeFile_debug'])
                android.signingConfigs[configNameDebug].storePassword = props['storePassword_debug']
                android.signingConfigs[configNameDebug].keyAlias = props['keyAlias_debug']
                android.signingConfigs[configNameDebug].keyPassword = props['keyPassword_debug']
            }
            if (propsFile.exists() && android.signingConfigs.hasProperty(configNameRelase)) {
                android.signingConfigs[configNameRelase].storeFile = file(props['storeFile_release'])
                android.signingConfigs[configNameRelase].storePassword = props['storePassword_release']
                android.signingConfigs[configNameRelase].keyAlias = props['keyAlias_release']
                android.signingConfigs[configNameRelase].keyPassword = props['keyPassword_release']
            }
        } else if (project.plugins.hasPlugin('com.android.library')) {
            //add the android sdk manager plugin to andriod projects
//            apply plugin: 'android-sdk-manager'
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    targetSdk = 28
    compileSdk = 28
    minSdk = 21

    // App dependencies
    supportLibraryVersion = '28.0.0'
    constraintLayout = '1.1.3'
    glideVersion = '3.8.0'
    gsonVersion = '2.8.5'

    //androidx
    appCompatVersion = '1.1.0'
    constraintLayoutVersion = '2.0.0-beta3'
}